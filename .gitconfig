[user]
	email = ben@benkraft.org #sometimes overridden by GIT_AUTHOR_EMAIL and GIT_COMMITTER_EMAIL (e.g. in khanify)
	name = Ben Kraft
[core]
    excludesfile = ~/.gitignore_global
	commentchar = !
[color]
	ui = auto
    status = auto
    branch = auto
    diff = auto
    interactive = auto
    grep = auto
[log]
	decorate = true
[push]
	default = current
[branch]
    # autosetupmerge auto-adds the --track flag to each git branch,
    # autosetuprebase means that instead of merging it will rebase.
    autosetupmerge = always
    autosetuprebase = always
[grep]
    lineNumber = true
[merge]
    # Always show a diffstat at the end of a merge
    stat = true
	conflictstyle = diff3
[diff]
    wordRegex = "\\w+|[^[:space:]]+"
    # Use mnemonic prefixes (index, work tree, commit, object) instead of the standard a and b notation
    mnemonicprefix = true
    # Detect renames as well as copies
    renames = copies
    noprefix = true
[alias]
    # My stuff
    d = diff -w --color-words
    a = commit --amend --no-edit
    recommit = "!git commit -F \"`git rev-parse --git-dir`\"/commit.save"
    rc = rebase --continue
    ri = rebase --interactive
    pp = "!f() { git p && git push \"$@\"; }; f"
    gred = "!f() { git grep -l \"$@\" | grep -vF -e package-lock.json | xargs gvim -o; }; f"
    ramend = rebase -x 'git gsu' -x 'arc amend'
    squash = "!f() { EDITOR=\"sed -i '2,$ s/^pick/squash/'\" git rebase -i \"$@\"; }; f"
    gsu = submodule update --init --recursive
    co = "!f() { git checkout \"$@\" && git gsu; }; f"
    p = "!f() { git pull \"$@\" && git gsu; }; f"
    m = "!f() { git merge \"$@\" && git gsu; }; f"
    mu = m --no-edit '@{u}'
[kaclone]
	email = benkraft@khanacademy.org
[ka "olc"]
	autoupdate = false
    abortOnUntrackedFiles = never
    abortOnBehindUpstream = never
    noJira = true
[ka "pr"]
    preserveTracking = true
    allowRemotesAsBase = true
    browse = never
[interactive]
	singleKey = true
[http]
	cookiefile = /home/benkraft/.gitcookies
[init]
	defaultBranch = main
[url "git@github.com:"]
	insteadOf = https://github.com/
[fetch]
	prune = true
