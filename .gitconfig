[user]
	email = ben@benkraft.org #sometimes overridden by GIT_AUTHOR_EMAIL and GIT_COMMITTER_EMAIL (e.g. in khanify)
	name = Ben Kraft
[core]
    excludesfile = ~/.gitignore_global
[color]
	ui = auto
    status = auto
    branch = auto
    diff = auto
    interactive = auto
    grep = auto
[log]
	decorate = true
[push]
	default = current
[branch]
    # autosetupmerge auto-adds the --track flag to each git branch,
    # autosetuprebase means that instead of merging it will rebase.
    autosetupmerge = always
    autosetuprebase = always
[grep]
    lineNumber = true
[merge]
    # Always show a diffstat at the end of a merge
    stat = true
	conflictstyle = diff3
[diff]
    wordRegex = "\\w+|[^[:space:]]"
    # Use mnemonic prefixes (index, work tree, commit, object) instead of the standard a and b notation
    mnemonicprefix = true
    # Detect renames as well as copies
    renames = copies
    noprefix = true
[alias]
    # My stuff
    d = diff -w --color-words
    a = commit --amend --no-edit
    recommit = "!git commit -F \"`git rev-parse --git-dir`\"/commit.save"
    rc = rebase --continue
    ri = rebase --interactive
    pp = "!f() { git p && git push \"$@\"; }; f"
    gred = "!f() { git grep -l \"$@\" | grep -vF -e tests_for.json -e ownership_data.json | xargs gvim -o; }; f"
    ramend = rebase -x 'git gsu' -x 'arc amend'
    # Standard khan stuff
    gsu = submodule update --init --recursive
    hc = "!f() { if [ -s tools/hook-check.sh ]; then tools/hook-check.sh --fast; fi; }; f"
    co = "!f() { if [ -n \"$1\" -a -z \"$2\" ]; then git checkout "`revisionid-to-diffid.sh --tag \"$@\"`"; else git checkout \"$@\"; fi && git gsu; }; f"
    p = "!f() { git pull \"$@\" && git gsu && git hc; }; f"
    m = "!f() { git merge \"$@\" && git gsu && git hc; }; f"
    which-deploy = "!f() { git tag --contains \"$@\" | grep '^gae-' | grep -v bad | head -n 1; }; f"
    prev-deploy = "!f() { git tag | grep '^gae-' | grep -v bad | grep -B 1 \"$1\" | head -n 1; }; f"
    next-deploy = "!f() { git tag | grep '^gae-' | grep -v bad | grep -A 1 \"$1\" | tail -n 1; }; f"
    when-deploy = "!f() { git cat-file -p \"$1\" | perl -nle 'print scalar localtime $1 if /^tagger .* (\\d+) \\S+$/'; }; f"
    squash = "!f() { EDITOR=\"sed -i '2,$ s/^pick/squash/'\" git rebase -i \"$@\"; }; f"
[kaclone]
	email = benkraft@khanacademy.org
[interactive]
	singleKey = true
[http]
	cookiefile = /home/benkraft/.gitcookies
